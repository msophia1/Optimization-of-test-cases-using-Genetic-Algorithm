/**
 * Created by 1021288 on 6/22/2017.
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package myprojectbg;

/**
 *
 * @author Administrator
 */
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import mypackage.GA;

public class Myproject extends javax.swing.JFrame {

    /**
     * Creates new form demo3
     */
    int cn=1002;
    int arr[]=new int[cn];
    int tstno[]=new int[cn];
    String tstdesc[]=new String[cn];
    Statement st;
    Connection con;
    String tablename;
    int ctr=0;

    public Myproject(){}
    public Myproject(String s)
    {
        tablename=s;
        System.out.println(tablename);

        try
        {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con = DriverManager.getConnection("jdbc:odbc:testdsn1");
            st = con.createStatement();
            initComponents();
        }catch(Exception e)
        {
            System.out.println(e.toString());
        }
        setTable();
    }



    private void setTable()
    {
        // cn=Integer.parseInt(jtf.getText());
        int c=0;
        for(int x=0;x<cn;x++)
            tstno[x]=0;
        for(int x=0;x<cn;x++)
            tstdesc[x]="";

        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        try
        {

            String sql = "SELECT * FROM "+tablename;
            ResultSet rs = st.executeQuery(sql);
            model.setRowCount(0);

            while (rs.next())
            {
                String d1, d2, d4, d3,d5;
                int i;

                i = rs.getInt(1);
                tstno[c]=i;
                d1 = rs.getString(2);
                d2 = rs.getString(3);
                d3 = rs.getString(4);
                tstdesc[c]=d3;
                d4 = rs.getString(5);
                d5 = rs.getString(6);

                c++;

                model.addRow(new Object[]{i,d3,d4,d5});
            }
            jTextField1.setText(Integer.toString(c));

            rs.close();

        }

        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GA Tool");
        setIconImage(new ImageIcon("C:\\Users\\Administrator\\Documents\\NetBeansProjects\\myprojectbg1\\src\\icon1.jpg").getImage());
        getContentPane().setLayout(null);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "ID", "Testcase_desc", "Expected_result", "Req_Criticality"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(255, 153, 0));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 20, 960, 580);

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel1.setText("Number of TestCases");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(280, 610, 216, 34);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jTextField1.setToolTipText("");
        jTextField1.setDisabledTextColor(new java.awt.Color(0, 153, 153));
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(510, 620, 173, 20);

        jButton1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jButton1.setText("GENERATE OPTIMIZED TESTCASES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(20, 650, 390, 30);

        jButton2.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(840, 650, 120, 29);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg7.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 1200, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try
        {
            String str="SELECT * FROM combotable";

            ResultSet rs=st.executeQuery(str);
            int i=1;
            while(rs.next())
            {
                String d;
                d=rs.getString(2);
                i++;
            }
            ctr=(i-2);

        }catch(Exception e){System.out.println(e.toString());}

        cn=Integer.parseInt(jTextField1.getText());

        if(evt.getSource()==jButton1)
        {
            if(cn<100)
            {
                JOptionPane.showMessageDialog(null,"test cases should be more than 100");
            }
            int l=10,sum=0,sum_cross=0,final_flg=0,cntr=0;
            double avg_cross,avg,avg_curr=0.0,avg_old;
            int w[]=new int[cn];
            int arr[]=new int[cn];
            int sfinalint1[]=new int[cn];
            int rem_dup[]=new int[cn];
            int rem_new[]=new int[cn];
            int finalint[]=new int[cn];
            int wnew[]=new int[cn];
            int idnew[]=new int[cn];
            String ws[]=new String[cn];
            int fw[]=new int[cn];
            int perw[]=new int[cn];
            int rep[]=new int[cn];
            int sfinalint[]=new int[cn];
            int cw[]=new int[cn];
            float pw[]=new float[cn];
            GA g=new GA(tablename,cn);
            for(int k=0;k<cn;k++)
                finalint[k]=0;

            for(int k=0;k<cn;k++)
                rem_dup[k]=0;

            arr=g.getweights();
            //for(int k=0;k<cn;k++)
            //	System.out.print(arr[k]+"\t");

            for(int k=0;k<cn;k++)
                w[k]=g.weightbinary(arr[k]);

            int i=0;

            while(avg_curr<=8900.00)
            {
                System.out.print("iteration"+i+"\t\t");
                for(int k=0;k<cn;k++)
                    ws[k]=g.conv_int(w[k],l);

                for(int k=0;k<cn;k++)
                    fw[k]=g.squareweight(arr[k]);

                for(int k=0;k<cn;k++)
                    sum=sum+fw[k];

                avg=sum/cn;
                avg_old=avg_curr;
                avg_curr=avg;
                if(avg_curr>8900.00)
                    break;
                //System.out.println("current avg::"+avg_curr);
                //System.out.println("old avg::"+avg_old);


                for(int k=0;k<cn;k++)
                    pw[k]=g.probabilityweight(fw[k],sum);


                for(int k=0;k<cn;k++)
                    perw[k]=g.percent(pw[k]);

                //for(int k=0;k<cn;k++)
                //	System.out.println("prob::"+pw[k]);
                rep=g.selection(perw,tstno);

                for(int k=0;k<cn;k++)
                    w[k]=g.weightbinary(rep[k]);

                for(int k=0;k<cn;k++)
                    ws[k]=g.conv_int(w[k],l);

                sfinalint=g.crossover(ws);

                if(cn>=1000)
                    sfinalint=g.mutation(sfinalint);

                for(int k=0;k<cn;k++)
                {
                    idnew[k]=sfinalint[k];
                }

                int ct=0,sf,flg=0;

                for(int k=0;k<cn;k++)
                {
                    sf=sfinalint[k];
                    for(int m=0;m<cn;m++)
                    {

                        if(tstno[m]==sf)
                            flg=1;
                        else
                            flg=0;

                        if(flg==1)
                        {

                            wnew[ct]=arr[m];
                            ct++;
                        }
                    }

                }
                for(int k=0;k<cn;k++)
                {
                    w[k]=g.weightbinary(wnew[k]);
                }

                int wn;
                if(i==0)
                {
                    for(int k=0;k<cn;k++)
                    {	final_flg=0;
                        wn=idnew[k];
                        for(int m=0;m<cn;m++)
                        {

                            if(finalint[m]!=wn && cntr!=cn && final_flg==0)
                            {
                                finalint[cntr]=wn;
                                cntr++;

                                final_flg=1;

                            }
                        }

                    }

                }
                else
                {
                    for(int k=0;k<cn;k++)
                    {	final_flg=0;
                        wn=idnew[k];
                        for(int m=0;m<cn;m++)
                        {
                            if(finalint[m]!=wn && cntr!=cn && final_flg==0)
                            {
                                finalint[cntr]=wn;
                                cntr++;

                                final_flg=1;

                            }
                        }

                    }
                }
                i++;
            }


            rem_dup=g.removeDuplicates(finalint);

            //rem_new=g.chkmax(rem_dup,arr,tstno);
            //int len = rem_dup.length + rem_new.length;
            //	int[] result = new int[len];
            //	System.arraycopy(rem_dup, 0, result, 0, rem_dup.length);
            //	System.arraycopy(rem_new, 0, result, rem_dup.length, rem_new.length);

            //int[] fresult=new int[len];
            //fresult=g.removeDuplicates(result);
            //System.out.println("fresult::");
            //for(int k=0;k<fresult.length;k++)
            //	System.out.print(fresult[k]+"\t");

            Create_Table();

            try
            {
                String ii=Integer.toString(ctr-1);
                String query="insert into selectedtest"+ii+" values(?)";
                PreparedStatement pst=con.prepareStatement(query);
                for(int k=1;k<rem_dup.length;k++)
                {
                    pst.setInt(1,rem_dup[k]);
                    pst.executeUpdate();
                }

                st.close();
                con.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
            Finalform f1=new Finalform(tablename,ctr,cn);
            f1.setSize(1000,800);
            f1.setVisible(true);
            this.hide();
            System.out.print("table created");
        }
    }


    //demo4 d=new demo4();
    //d.setSize(450,500);
    //d.show();
    //}
    private void Create_Table()
    {
        try
        {
            String ii=Integer.toString(ctr);
            boolean b=st.execute("create table selectedtest"+ii+" (id Integer)");

            PreparedStatement pst=con.prepareStatement("insert into combotable (tablename) values(?)");
            pst.setString(1,"selectedtest"+ii);
            pst.executeUpdate();

        }
        catch (Exception e){ System.out.println("Table already exist");}
        ctr++;
    }


    /*
       }//GEN-LAST:event_jButton1ActionPerformed
   */
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ProjGA pg=new ProjGA();
        pg.setSize(1000,800);
        pg.show();
        this.hide();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Myproject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Myproject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Myproject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Myproject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Myproject().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}


